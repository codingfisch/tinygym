name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        exclude:
          - os: ubuntu-latest
            python-version: '3.10'
          - os: ubuntu-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.13'
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version || '3.12' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version || '3.12' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel cython numpy

      - name: Install cibuildwheel (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install cibuildwheel

      - name: Build wheels (Linux with cibuildwheel)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS: auto64
          CIBW_SKIP: "*-musllinux_*"
          CIBW_BUILD_VERBOSITY: 1

      - name: Build wheels (Windows and macOS)
        if: matrix.os != 'ubuntu-latest'
        run: |
          python -m build --wheel

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version || 'all' }}
          path: dist/*.whl

  publish:
    needs: build-wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload dist/*.whl
